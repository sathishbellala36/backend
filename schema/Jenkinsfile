pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
    environment {
        DEBUG = 'true'
        appVersion = '' // this will become global, we can use across pipeline
    }
    
    stages {
        stage('Read the version') {
            steps {
                script{
                    def packageJason = readJSON file: 'package.json'
                    appVersion = packageJason.version
                    echo "App version: ${appVersion}"
                }
             }
        }
        stage('Install Dependencies') {
            steps {
                
                sh 'npm install'
       
            }

         }
        stage('Deploy') {
             when {
                expression { env.GIT_BRANCH == 'origin/main' }
                
            }
            steps {

                sh 'echo This is deploy'
                //error 'pipeline failed'
            }
        }
     
    }
             

    }
    post{
        always{
            echo "This sections run always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
